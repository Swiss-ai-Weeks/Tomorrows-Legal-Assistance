#!/usr/bin/env python3
"""Test business logic estimator for the traffic case."""

import os
import sys
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

# Add the backend tools to path
project_root = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, project_root)

def test_business_logic_estimator():
    """Test the business logic estimator for the specific traffic case."""
    
    try:
        from backend.agent_with_tools.tools.estimate_likelihood import estimate_business_likelihood
        
        # The actual traffic case from the user
        case_text = """Am 15. August 2025 gegen 14:30 Uhr fuhr ich auf der A1 Autobahn zwischen Basel und Bern in Richtung Bern. Ich war mit meinem BMW auf dem Weg zu einem wichtigen Gesch√§ftstermin. Die Geschwindigkeitsbegrenzung auf diesem Abschnitt betr√§gt normalerweise 120 km/h, jedoch waren aufgrund von Bauarbeiten tempor√§re Schilder mit 80 km/h aufgestellt. Diese Schilder waren teilweise von B√§umen verdeckt und schlecht sichtbar. Ein mobiler Blitzer der Kantonspolizei Bern ma√ü meine Geschwindigkeit mit 108 km/h. Nach Abzug der Toleranz von 5 km/h ergab sich eine √úberschreitung von 23 km/h √ºber dem tempor√§ren Limit von 80 km/h. Ich erhielt einen Strafbefehl √ºber 600 CHF Busse plus 40 CHF Verfahrenskosten. Zus√§tzlich wurde mir der F√ºhrerausweis f√ºr 1 Monat entzogen. Ich bin der Meinung, dass die tempor√§ren Geschwindigkeitsbegrenzungen nicht ordnungsgem√§√ü beschildert waren und die Messungen in einer un√ºbersichtlichen Baustellen-Situation erfolgten. Au√üerdem war der Blitzer m√∂glicherweise nicht korrekt geeicht - ich habe Zweifel an der Genauigkeit der Messung. Als Gesch√§ftsmann bin ich auf meinen F√ºhrerausweis angewiesen. Kann ich erfolgreich Einspruch gegen den Strafbefehl und den F√ºhrerausweisentzug einlegen?"""
        
        category = "Strafverkehrsrecht"
        
        print("üß™ Testing Business Logic Estimator")
        print("=" * 50)
        print(f"üìù Category: {category}")
        print("üìÑ Case: Traffic speeding violation (23 km/h over limit)")
        print("-" * 50)
        
        result = estimate_business_likelihood(case_text, category)
        
        print("üìä Business Logic Results:")
        print(f"  Likelihood: {result['likelihood']}")
        print(f"  Raw Estimate: {result['raw_estimate']}")
        print(f"  Category Mapped: {result['category_mapped']}")
        print(f"  Subcategory: {result['subcategory']}")
        print(f"  Explanation: {result['explanation']}")
        
        # Test what the LLM should receive as context
        from backend.agent_with_tools.tools.estimate_likelihood import get_likelihood_explanation_context
        context = get_likelihood_explanation_context(result)
        print("\nü§ñ LLM Context:")
        print(context)
        
        # Expected vs Actual
        expected_range = (10, 15)  # Based on user's observation
        actual = result['likelihood']
        
        if actual and expected_range[0] <= actual <= expected_range[1]:
            print(f"\n‚úÖ Business logic is working correctly ({actual}% in expected range {expected_range})")
        else:
            print(f"\n‚ùå Business logic issue: got {actual}%, expected {expected_range[0]}-{expected_range[1]}%")
            
    except Exception as e:
        print(f"‚ùå Error testing business logic: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_business_logic_estimator()